syntax = "proto3";
package api;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "api/common.proto";

option go_package = "github.com/jyotikmayur7/YouCreo/api";
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
      title: "Subscription Service API";
      version: "0.1";
    };
    schemes: [HTTPS, HTTP];
    consumes: "application/json";
    produces: ["application/json"];
   };

service SubscriptionService{
    rpc GetAllSubscriptions (GetAllSubscriptionsRequest) returns (GetAllSubscriptionsResponse){
        option (google.api.http) = {
            get : "/v1/subsciption"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "Get All Subscriptions",
            description: "Get all the subscribed channel by user",
            tags: "Subscription";
          };
    }
    
    rpc CreateSubscription (CreateSubscriptionRequest) returns (CreateSubscriptionResponse){
        option (google.api.http) = {
            post : "/v1/subsciption",
            body : "*",
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "Add Subscription",
            description: "User subscribes to the channel",
            tags: "Subscription";
          };
    }
    
    rpc DeleteSubscription (DeleteSubscriptionRequest) returns (DeleteSubscriptionResponse){
        option (google.api.http) = {
            delete : "/v1/subsciption/{channel_id}",
            body : "*",
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "Delete Subscription",
            description: "User unsubscribes to the channel",
            tags: "Subscription";
          };
    }
} 


message GetAllSubscriptionsRequest{
    string cursor = 1;
    string page_size = 2;
}

message GetAllSubscriptionsResponse{
    repeated api.Channel channel = 1;
    string next_cursor = 2;
}

message CreateSubscriptionRequest{
    string channel_id = 1;
}

message CreateSubscriptionResponse{}

message DeleteSubscriptionRequest{
    string channel_id = 1;
}

message DeleteSubscriptionResponse{}